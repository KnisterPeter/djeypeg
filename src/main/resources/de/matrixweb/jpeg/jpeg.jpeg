// -----------------------------------------------------------------------------
// 
// The JPEG grammar
// 
// -----------------------------------------------------------------------------
// 
// This is the main entry point into the JPEG grammar.
// 
JPEG :
  GrammarBlock+ EOI
;

// -----------------------------------------------------------------------------

GrammarBlock :
  (Rule | Comment) WS*
;

// -----------------------------------------------------------------------------

Rule :
  RuleName WS* RuleReturns? WS* COLON WS* Body WS* SEMI WS*
;

RuleReturns :
  'returns' WS* ReturnTypeName
;

ReturnTypeName :
  ID
;

// -----------------------------------------------------------------------------

RuleName :
  ID
;

// -----------------------------------------------------------------------------

Body :
  (ChoiceExpression WS*)+
;

// -----------------------------------------------------------------------------

ChoiceExpression :
  SequenceExpression ChoiceExpressionPart*
;

ChoiceExpressionPart :
  '|' WS* SequenceExpression
;

// -----------------------------------------------------------------------------

SequenceExpression :
  (
    (
      Terminal
      | RangeExpression
      | AnyCharExpression
      | EndOfInputExpression
      | AndPredicateExpression
      | NotPredicateExpression
      | OneOrMoreExpression
      | ZeroOrMoreExpression
      | OptionalExpression
      | AtomicExpression
    )
    WS*
  )+
;

// -----------------------------------------------------------------------------

RangeExpression : 
  '[' RangeExpressionDash? (!(']')(RangeExpressionRange | RangeExpressionChar))* ']'
;

RangeExpressionDash :
  '-'
;
 
RangeExpressionRange : 
  !('-') . '-' !('-') .
;

RangeExpressionChar : 
  !('-') .
;

// -----------------------------------------------------------------------------

AndPredicateExpression :
  '&' WS* AtomicExpression
;

// -----------------------------------------------------------------------------

NotPredicateExpression :
  '!' WS* AtomicExpression
;

// -----------------------------------------------------------------------------

OneOrMoreExpression :
  AtomicExpression WS* '+'
;

// -----------------------------------------------------------------------------

ZeroOrMoreExpression :
  AtomicExpression WS* '*'
;

// -----------------------------------------------------------------------------

OptionalExpression :
  AtomicExpression WS* '?'
;

// -----------------------------------------------------------------------------

AtomicExpression :
    SubExpression
  | RuleName
;

// -----------------------------------------------------------------------------

SubExpression :
  '(' WS* ChoiceExpression WS* ')'
;

// -----------------------------------------------------------------------------

AnyCharExpression :
  '.'
;

// -----------------------------------------------------------------------------

EndOfInputExpression :
  'EOI'
;

// -----------------------------------------------------------------------------

Terminal :
  QUOTE InTerminalChar? QUOTE
;

InTerminalChar :
  ('\\' '\'' | '\\' '\\' | !QUOTE .)+
;

// -----------------------------------------------------------------------------

Comment :
  '//' (!(('\r')? '\n') .)*
;

// -----------------------------------------------------------------------------

// 
// An ID name must start with an letter or underscore and be followed
// by letters, digits or underscores.
// 
ID :
  [a-zA-Z_]([a-zA-Z0-9_])*
;

WS : ' ' | '\n' | '\t' | '\r';
COLON : ':';
SEMI  : ';';
QUOTE : '\'';
