JPEG :
  Rule+ EOI
;

Rule :
  RuleAnnotations? WS* RuleName WS* COLON WS* Body WS* SEMI WS*
;

RuleAnnotations :
  RuleAnnotation+
;
RuleAnnotation :
  '[' WS* (RuleAnnotationInternal | RuleAnnotationHidden | RuleAnnotationReturns) WS* ']'
;
RuleAnnotationInternal :
  'internal'
;
RuleAnnotationHidden :
  'hidden' WS* '=' WS* RuleAnnotationHiddenRules
;
RuleAnnotationHiddenRules :
  RuleAnnotationHiddenRule ( WS* ',' WS* RuleAnnotationHiddenRule)*
;
RuleAnnotationHiddenRule :
  RuleName
;
RuleAnnotationReturns :
  'returns' WS* '=' WS* ID
;

RuleName :
  ID
;

Body :
  (ChoiceExpression WS*)+
;

ChoiceExpression :
  SequenceExpression ChoiceExpressionPart*
;
ChoiceExpressionPart :
  '|' WS* SequenceExpression
;

SequenceExpression :
  (
    (
      Terminal
      | RangeExpression
      | AnyCharExpression
      | EndOfInputExpression
      | AndPredicateExpression
      | NotPredicateExpression
      | OneOrMoreExpression
      | ZeroOrMoreExpression
      | OptionalExpression
      | AtomicExpression
    )
    WS*
  )+
;

RangeExpression : 
  '[' RangeExpressionDash? (!(']')(RangeExpressionRange | RangeExpressionChar))* ']'
;
RangeExpressionDash :
  '-'
; 
RangeExpressionRange : 
  !('-') . '-' !('-') .
;
RangeExpressionChar : 
  !('-') .
;

AndPredicateExpression :
  '&' WS* AtomicExpression
;

NotPredicateExpression :
  '!' WS* AtomicExpression
;

OneOrMoreExpression :
  AtomicExpression WS* '+'
;

ZeroOrMoreExpression :
  AtomicExpression WS* '*'
;

OptionalExpression :
  AtomicExpression WS* '?'
;

AtomicExpression :
    SubExpression
  | RuleName
;

SubExpression :
  '(' WS* ChoiceExpression WS* ')'
;

AnyCharExpression :
  '.'
;

EndOfInputExpression :
  'EOI'
;

Terminal :
 QUOTE InTerminalChar? QUOTE
;
InTerminalChar :
  ('\\' '\'' | '\\' '\\' | !QUOTE .)+
;

ID :
  [a-zA-Z_]([a-zA-Z0-9_])*
;

WS : ' ' | '\n' | '\t' | '\r';
COLON : ':';
SEMI  : ';';
QUOTE : '\'';
